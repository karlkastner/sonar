% Fri 23 Sep 17:32:45 CEST 2016
% Karl Kastner, Berlin
%
% convert to text by using the Lowrance software
%
% This programme is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
%
% This programme is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this programme. If not, see <https://www.gnu.org/licenses/>.
%
function slg = from_slg2txt(slg,filename)
	if (strcmp(lower(filename(end-3:end)),'.slg'))
		tmp = tempname();
		system(['LD_LIBRARY_PATH= wine ',ROOTFOLDER(),'/software/slg2txt.exe ', filename, ' ', tmp]);
		filename = tmp;
	end
	tab=readtable(filename);
	field_C = {   ...
	      'UpperLimit' ...
	    , 'LowerLimit' ...
	    , 'Depth' ...
	    , 'WaterTemp' ...
	    , 'Temp2' ...
	    , 'Temp3' ...
	    , 'WaterSpeed' ...
	    , 'PositionX' ...
	    , 'PositionY' ...
	    ...%, 'TopOfBottomDepth' ...
	    , 'Speed' ...
	    , 'Track' ...
	    , 'Altitude' ...
	    };
	for idx=1:length(field_C)
		name = field_C{idx};
		slg.(name) = tab.(name);
	end
	slg.TimeOffset = tab.TimeOffset_ms_;
	
	% surfacedepth and valid are swapped by slg2txt
	slg.SurfaceDepth = tab.SurfaceValid;
	slg.SurfaceValid = (cell2mat(tab.SurfaceDepth)=='T');
	% surfacedepth and valid are swapped by slg2txt
	slg.TopOfBottomDepth = tab.TopOfBottomValid;
	slg.TopOfBottomValid = (cell2mat(tab.TopOfBottomDepth)=='T');
	
	field_C = { ...
	      'DepthValid' ...
	    , 'WaterTempValid' ...
	    , 'Temp2Valid' ...
	    , 'Temp3Valid' ...
	    , 'WaterSpeedValid' ...
	    , 'PositionValid' ...
	    , 'TimeValid' ...
	    ...%, 'TopOfBottomValid' ...
	    , 'SpeedTrackValid' ...
	    , 'AltitudeValid' ...
	    , 'ColumnIs50kHz' ...
	    };

	for idx=1:length(field_C)
		name = field_C{idx};
		val = cell2mat(tab.(name));
		val = (val == 'T');
		slg.(name) = val;
	end

	slg.to_metric(NaN);

	% somehow the depthValid information is sometimes bogus
	% the depth can be assumed invalid, if it does not change
	slg.DepthHold  = [false;cvec(diff(slg.Depth) == 0)];
	slg.DepthValid = cvec(slg.DepthValid) & ~slg.DepthHold;
	% invalidate samples where the depth did not change
	slg.Depth(slg.DepthHold) = NaN;
end

